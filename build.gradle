plugins {
    id 'net.darkhax.curseforgegradle' version '1.0.+' apply false
    id 'com.modrinth.minotaur' version '2.+' apply false
}

apply from: 'buildtools/ColoredOutput.gradle'

println "Starting build of $mod_name, Version: $mod_version"

subprojects {
    version = mod_version
    group = "hantonik.$mod_id"

    def replaceProperties = [
        'mod_version': version,
		'mod_name': mod_name,

		'mc_version': mc_version,

		'loader_version': loader_version,
		'fabric_version': fabric_version
    ]

    tasks.withType(ProcessResources).configureEach {
        inputs.properties replaceProperties
	    replaceProperties.put 'project', project

	    filesMatching([ 'META-INF/mods.toml', 'fabric.mod.json' ]) {
	    	expand replaceProperties
	    }
    }

    tasks.withType(Jar).configureEach {
        manifest {
            attributes([
                    "Specification-Title": mod_id,
                    "Specification-Vendor": 'Hantonik',
                    "Specification-Version": '1',
                    "Implementation-Title": project.name,
                    "Implementation-Version": project.jar.archiveVersion,
                    "Implementation-Vendor": 'Hantonik',
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ])
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }
}

task publishMod {
    dependsOn(':Forge:publishCurseForge').finalizedBy(':NeoForge:publishCurseForge').finalizedBy(':Fabric:publishCurseForge')
    dependsOn(':Forge:modrinth').finalizedBy(':NeoForge:modrinth').finalizedBy(':Fabric:modrinth')
}