import net.darkhax.curseforgegradle.Constants as CFConstants
import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'net.neoforged.gradle' version '[6.0.18,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'io.freefair.lombok' version '6.6.+'

    id 'idea'
    id 'maven-publish'
}

apply plugin: 'net.darkhax.curseforgegradle'

base {
    archivesName = "$mod_name-$mc_version-forge"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"
}

println "Using Forge (NeoForged): $forge_version, for Minecraft: $mc_version, with Mappings: $mappings_channel-$mappings_version"

minecraft {
    mappings channel: mappings_channel, version: "$mappings_version-$mc_version"

    copyIdeResources = true

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', "$mod_id"

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "$buildDir/createSrgToMcp/output.srg"

            ideaModule "${rootProject.name}.${project.name}.main"

            mods {
                anvilapi {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', "$mod_id"

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "$buildDir/createSrgToMcp/output.srg"

            ideaModule "${rootProject.name}.${project.name}.main"

            mods {
                anvilapi {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { url 'https://maven.blamejared.com' }
    maven { url 'https://maven.shedaniel.me' }
}

dependencies {
    minecraft "net.neoforged:forge:$mc_version-$forge_version"

    compileOnly fg.deobf("mezz.jei:jei-$mc_version-common-api:$jei_version")
    compileOnly fg.deobf("mezz.jei:jei-$mc_version-forge-api:$jei_version")
//    implementation fg.deobf("mezz.jei:jei-$mc_version-forge:$jei_version")

    compileOnly fg.deobf("me.shedaniel:RoughlyEnoughItems-default-plugin-forge:$rei_version")
    compileOnly fg.deobf("me.shedaniel:RoughlyEnoughItems-api-forge:$rei_version")
    implementation fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:$rei_version")

    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:$clothconfig_version")
    implementation fg.deobf("dev.architectury:architectury-forge:$architectury_version")

    implementation fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-$mc_version:$crafttweaker_version")

    compileOnly "org.projectlombok:lombok:$lombok_version"

    annotationProcessor "org.spongepowered:mixin:$mixin_processor_version:processor"
    annotationProcessor "org.projectlombok:lombok:$lombok_version"
}

jar.finalizedBy('reobfJar')

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

artifacts {
    archives jar
    archives sourcesJar
}

project.evaluationDependsOn(':Changelog')

task publishCurseForge(type: TaskPublishCurseForge) {
    dependsOn(tasks.jar)
    dependsOn(':Changelog:makeHtmlChangelog')

    apiToken = System.getenv('CURSEFORGE_TOKEN')

    var modFile = upload('634377', tasks.jar.archiveFile)
    modFile.displayName = "$archivesBaseName-$version"
    modFile.releaseType = CFConstants.RELEASE_TYPE_RELEASE
    modFile.addGameVersion mc_version
    modFile.addModLoader('Forge', 'NeoForge')
    modFile.addJavaVersion 'Java 17'
    modFile.addOptional('crafttweaker', 'roughly-enough-items', 'jei')

    modFile.changelogType = CFConstants.CHANGELOG_HTML
    modFile.changelog = file("${project(':Changelog').projectDir}/changelog.html").getText().replace([ '${version}': "$mc_version-forge-$version", '&#x60;': '`' ])
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar

            artifactId "$archivesBaseName"
        }
    }
    repositories {
        mavenLocal()

//        maven {
//            url "https://hantonikdev.jfrog.io/artifactory/mods/"
//
//            credentials {
//                username System.getenv("REPO_USER")
//                password System.getenv("REPO_PASSWORD")
//            }
//        }
    }
}
